package br.com.tbog.jdbc;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import br.com.tbog.classes.RelatorioMensal;
import br.com.tbog.classes.Usuario;
import br.com.tbog.jdbcinterfaces.RelatorioDAO;

public class JDBCRelatorioDAO implements RelatorioDAO {

	private Connection conexao;
	
	/*Construtor que inicia a classe JDBC com uma conex√£o vinda de alguma servlet*/
	public JDBCRelatorioDAO(Connection conexao) {
		this.conexao = conexao;
	}
	
	public RelatorioMensal buscaRelatorio(String mes, String ano) {
		
		RelatorioMensal relatoriobd = new RelatorioMensal();
		
		String comando = "SELECT mes, ano FROM consultas_mensais WHERE mes = '" + mes + "' AND ano = '" + ano + "' ";
		
		try {
			
			Statement stmt = conexao.createStatement();
			ResultSet rs = stmt.executeQuery(comando);
			
			while(rs.next()) {
				
				String mesbd = rs.getString("mes");
				String anobd = rs.getString("ano");
				
				relatoriobd.setMes(mesbd);
				relatoriobd.setAno(anobd);
				
			}
			
		} catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();
		}
		
		
		return relatoriobd;
	}

	public RelatorioMensal contaCadastros(RelatorioMensal relatorio, String primeiroDia, String ultimoDia) {
		
		String comandoCadastrados = "SELECT COUNT(data_cadastro) AS dataDeCadastro";
		comandoCadastrados += " FROM usuarios WHERE data_cadastro BETWEEN '" + primeiroDia + "' AND '" + ultimoDia + "' ";
		
		try {
			
			Statement stmt = conexao.createStatement();
			ResultSet rs = stmt.executeQuery(comandoCadastrados);
			System.out.println(comandoCadastrados);
			
			String numCadastros = null;
			
			while(rs.next()) {
				numCadastros = rs.getString("dataDeCadastro");
				relatorio.setNumeroCadastros(numCadastros);
			}
			
			System.out.println(numCadastros+" AQUI +++++++++++++");
			
		} catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();
		}
		
		return relatorio;
	}
	
	public RelatorioMensal contaAtivos(RelatorioMensal relatorio, String primeiroDia, String ultimoDia) {
		
		String comandoAtivos = "SELECT COUNT(ultimo_login) AS ultimoLogin FROM `usuarios`";
		comandoAtivos += " WHERE ultimo_login BETWEEN '" + primeiroDia + "' AND '" + ultimoDia + "' ";
		
		
		try {
			
			Statement stmt = conexao.createStatement();
			
			ResultSet rs = stmt.executeQuery(comandoAtivos);
			
			String numAtivos = null;
			
			if((rs != null) && (rs.next())){
                 numAtivos = rs.getString("ultimoLogin");
            }
			
			System.out.println(numAtivos+" AQUI +++++++++++++");
			relatorio.setNumeroVisitas(numAtivos);
			
		} catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();
		}
		
		return relatorio;
	}
	
	
	public void geraRelatorio(String numCad, String  numAtv, String mes, String ano) {
		System.out.println("OWWWWWWWWWWWWWWW WNTREI AQUI DOIDAO");
		
		String comandoRelatorio = "INSERT INTO consultas_mensais (mes, ano, numero_visitas, numero_cadastros)";
		comandoRelatorio +=" VALUES ('" + mes + "', '" + ano + "', '" + numAtv + "', '" + numCad + "')";
		
		try {
			
			Statement stmt = conexao.createStatement();
			stmt.execute(comandoRelatorio);
			
		} catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();
		}
		
	}

	public List<RelatorioMensal> agrupaRelatorios(String anoConsulta) {
		
		List<RelatorioMensal> listaDeRelatorios = new ArrayList<RelatorioMensal>();
		String comando = "SELECT ano, mes, numero_visitas, numero_cadastros FROM consultas_mensais ";
			   comando += "WHERE ano = '" + anoConsulta + "' ORDER BY mes";
		
		try {
			Statement stmt = conexao.createStatement();
			ResultSet rs = stmt.executeQuery(comando);
			while(rs.next()){
				
				RelatorioMensal relatorio = new RelatorioMensal();
				
				String mes = rs.getString("mes");
				String ano = rs.getString("ano");
				String numCadastros = rs.getString("numero_cadastros");
				String numAtivos = rs.getString("numero_visitas");
				
				relatorio.setMes(mes);
				relatorio.setAno(ano);
				relatorio.setNumeroCadastros(numCadastros);
				relatorio.setNumeroVisitas(numAtivos);
				
				listaDeRelatorios.add(relatorio);
				
			}
			
		} catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();
		}
		
		return listaDeRelatorios;
		
	}
	
}
